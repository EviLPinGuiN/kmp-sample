[versions]
agp = "8.4.0-alpha12"

# compose
compose = "1.6.2"
compose-compiler = "1.5.5" # !!! extend from kotlin version https://developer.android.com/jetpack/androidx/releases/compose-kotlin
compose-material3 = "1.2.0"

# multiplatform
kotlin = "1.9.20"
coroutines = "1.7.3" # https://github.com/Kotlin/kotlinx.coroutines
serialization = "1.5.1" # https://github.com/Kotlin/kotlinx.serialization
immutable = "0.3.5" # https://github.com/Kotlin/kotlinx.collections.immutable
sqlDelight = "1.5.5" # https://github.com/cashapp/sqldelight
ktor = "2.3.3" # https://github.com/ktorio/ktor
kodein = "7.21.2" # https://github.com/kosi-libs/Kodein

# androidx https://developer.android.com/jetpack/androidx/versions
androidx-lifecycle = "2.7.0"
androidx-activityCompose = "1.8.2"

coil = "2.4.0" # https://github.com/coil-kt/coil

# testing
mockk = "1.13.9" # https://github.com/mockk/mockk

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
#compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose"  }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose"  }

compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose"  }
compose-material-icons-ext = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose"   }

androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle"}

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutable" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock-jvm = { module = "io.ktor:ktor-client-mock-jvm", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" } # ios
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" } # android
okhttp3-logging-interceptor = "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.12" # android

coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coilSvg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }

kodein-di = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
multiplatform-settings = "com.russhwolf:multiplatform-settings:1.0.0"

sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-native-driver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-sqlite-driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

timber = "com.jakewharton.timber:timber:5.0.1"

mockk-jvm = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

[bundles]
ktorClientCommon = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-serialization",
    "ktor-client-logging",
]
